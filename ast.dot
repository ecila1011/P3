digraph AST {
1 [shape=box, label="VarDecl name='nums'\ntype: int"];
4 [shape=box, label="VarDecl name='factorial'\ntype: int"];
6 [shape=box, label="Location name='factorial'\ntype: int"];
7 [shape=box, label="Location name='n'\ntype: int"];
5 [shape=box, label="Assignment"];
5 -> 6;
5 -> 7;
10 [shape=box, label="Location name='n'\ntype: int"];
11 [shape=box, label="Literal value=2\ntype: int"];
9 [shape=box, label="BinaryOp op='>'\ntype: bool"];
9 -> 10;
9 -> 11;
14 [shape=box, label="Location name='factorial'\ntype: int"];
16 [shape=box, label="Location name='factorial'\ntype: int"];
18 [shape=box, label="Location name='n'\ntype: int"];
19 [shape=box, label="Literal value=1\ntype: int"];
17 [shape=box, label="BinaryOp op='-'\ntype: int"];
17 -> 18;
17 -> 19;
15 [shape=box, label="BinaryOp op='*'\ntype: int"];
15 -> 16;
15 -> 17;
13 [shape=box, label="Assignment"];
13 -> 14;
13 -> 15;
21 [shape=box, label="Location name='n'\ntype: int"];
23 [shape=box, label="Location name='n'\ntype: int"];
24 [shape=box, label="Literal value=1\ntype: int"];
22 [shape=box, label="BinaryOp op='-'\ntype: int"];
22 -> 23;
22 -> 24;
20 [shape=box, label="Assignment"];
20 -> 21;
20 -> 22;
12 [shape=box, label="Block\nsymbolTable: (empty)"];
12 -> 13;
12 -> 20;
8 [shape=box, label="WhileLoop\ntype: bool"];
8 -> 9;
8 -> 12;
26 [shape=box, label="Location name='factorial'\ntype: int"];
25 [shape=box, label="Return\ntype: int"];
25 -> 26;
3 [shape=box, label="Block\nsymbolTable: \n  factorial : int"];
3 -> 4;
3 -> 5;
3 -> 8;
3 -> 25;
2 [shape=box, label="FuncDecl name='fact'\ntype: int\nsymbolTable: \n  n : int"];
2 -> 3;
29 [shape=box, label="VarDecl name='num1'\ntype: int"];
30 [shape=box, label="VarDecl name='num2'\ntype: int"];
31 [shape=box, label="VarDecl name='i'\ntype: int"];
32 [shape=box, label="VarDecl name='temp'\ntype: int"];
34 [shape=box, label="Location name='i'\ntype: int"];
35 [shape=box, label="Literal value=2\ntype: int"];
33 [shape=box, label="Assignment"];
33 -> 34;
33 -> 35;
37 [shape=box, label="Location name='num1'\ntype: int"];
38 [shape=box, label="Literal value=1\ntype: int"];
36 [shape=box, label="Assignment"];
36 -> 37;
36 -> 38;
40 [shape=box, label="Location name='num2'\ntype: int"];
41 [shape=box, label="Literal value=1\ntype: int"];
39 [shape=box, label="Assignment"];
39 -> 40;
39 -> 41;
44 [shape=box, label="Location name='i'\ntype: int"];
45 [shape=box, label="Location name='n'\ntype: int"];
43 [shape=box, label="BinaryOp op='<'\ntype: bool"];
43 -> 44;
43 -> 45;
48 [shape=box, label="Location name='temp'\ntype: int"];
49 [shape=box, label="Location name='num2'\ntype: int"];
47 [shape=box, label="Assignment"];
47 -> 48;
47 -> 49;
51 [shape=box, label="Location name='num2'\ntype: int"];
53 [shape=box, label="Location name='num1'\ntype: int"];
54 [shape=box, label="Location name='num2'\ntype: int"];
52 [shape=box, label="BinaryOp op='+'\ntype: int"];
52 -> 53;
52 -> 54;
50 [shape=box, label="Assignment"];
50 -> 51;
50 -> 52;
56 [shape=box, label="Location name='num1'\ntype: int"];
57 [shape=box, label="Location name='temp'\ntype: int"];
55 [shape=box, label="Assignment"];
55 -> 56;
55 -> 57;
59 [shape=box, label="Location name='i'\ntype: int"];
61 [shape=box, label="Location name='i'\ntype: int"];
62 [shape=box, label="Literal value=1\ntype: int"];
60 [shape=box, label="BinaryOp op='+'\ntype: int"];
60 -> 61;
60 -> 62;
58 [shape=box, label="Assignment"];
58 -> 59;
58 -> 60;
46 [shape=box, label="Block\nsymbolTable: (empty)"];
46 -> 47;
46 -> 50;
46 -> 55;
46 -> 58;
42 [shape=box, label="WhileLoop\ntype: bool"];
42 -> 43;
42 -> 46;
64 [shape=box, label="Location name='num2'\ntype: int"];
63 [shape=box, label="Return\ntype: int"];
63 -> 64;
28 [shape=box, label="Block\nsymbolTable: \n  num1 : int\n  num2 : int\n  i : int\n  temp : int"];
28 -> 29;
28 -> 30;
28 -> 31;
28 -> 32;
28 -> 33;
28 -> 36;
28 -> 39;
28 -> 42;
28 -> 63;
27 [shape=box, label="FuncDecl name='fib'\ntype: int\nsymbolTable: \n  n : int"];
27 -> 28;
67 [shape=box, label="VarDecl name='i'\ntype: int"];
68 [shape=box, label="VarDecl name='prime'\ntype: bool"];
70 [shape=box, label="Location name='i'\ntype: int"];
71 [shape=box, label="Literal value=2\ntype: int"];
69 [shape=box, label="Assignment"];
69 -> 70;
69 -> 71;
73 [shape=box, label="Location name='prime'\ntype: bool"];
74 [shape=box, label="Literal value=true\ntype: bool"];
72 [shape=box, label="Assignment"];
72 -> 73;
72 -> 74;
78 [shape=box, label="Location name='n'\ntype: int"];
79 [shape=box, label="Literal value=1\ntype: int"];
77 [shape=box, label="BinaryOp op='=='\ntype: bool"];
77 -> 78;
77 -> 79;
81 [shape=box, label="Location name='n'\ntype: int"];
82 [shape=box, label="Literal value=0\ntype: int"];
80 [shape=box, label="BinaryOp op='=='\ntype: bool"];
80 -> 81;
80 -> 82;
76 [shape=box, label="BinaryOp op='||'\ntype: bool"];
76 -> 77;
76 -> 80;
85 [shape=box, label="Location name='prime'\ntype: bool"];
86 [shape=box, label="Literal value=false\ntype: bool"];
84 [shape=box, label="Assignment"];
84 -> 85;
84 -> 86;
83 [shape=box, label="Block\nsymbolTable: (empty)"];
83 -> 84;
75 [shape=box, label="Conditional\ntype: bool"];
75 -> 76;
75 -> 83;
90 [shape=box, label="Location name='i'\ntype: int"];
91 [shape=box, label="Location name='n'\ntype: int"];
89 [shape=box, label="BinaryOp op='<'\ntype: bool"];
89 -> 90;
89 -> 91;
92 [shape=box, label="Location name='prime'\ntype: bool"];
88 [shape=box, label="BinaryOp op='&&'\ntype: bool"];
88 -> 89;
88 -> 92;
97 [shape=box, label="Location name='n'\ntype: int"];
98 [shape=box, label="Location name='i'\ntype: int"];
96 [shape=box, label="BinaryOp op='%'\ntype: int"];
96 -> 97;
96 -> 98;
99 [shape=box, label="Literal value=0\ntype: int"];
95 [shape=box, label="BinaryOp op='=='\ntype: bool"];
95 -> 96;
95 -> 99;
102 [shape=box, label="Location name='prime'\ntype: bool"];
103 [shape=box, label="Literal value=false\ntype: bool"];
101 [shape=box, label="Assignment"];
101 -> 102;
101 -> 103;
100 [shape=box, label="Block\nsymbolTable: (empty)"];
100 -> 101;
94 [shape=box, label="Conditional\ntype: bool"];
94 -> 95;
94 -> 100;
105 [shape=box, label="Location name='i'\ntype: int"];
107 [shape=box, label="Location name='i'\ntype: int"];
108 [shape=box, label="Literal value=1\ntype: int"];
106 [shape=box, label="BinaryOp op='+'\ntype: int"];
106 -> 107;
106 -> 108;
104 [shape=box, label="Assignment"];
104 -> 105;
104 -> 106;
93 [shape=box, label="Block\nsymbolTable: (empty)"];
93 -> 94;
93 -> 104;
87 [shape=box, label="WhileLoop\ntype: bool"];
87 -> 88;
87 -> 93;
110 [shape=box, label="Location name='prime'\ntype: bool"];
109 [shape=box, label="Return\ntype: bool"];
109 -> 110;
66 [shape=box, label="Block\nsymbolTable: \n  i : int\n  prime : bool"];
66 -> 67;
66 -> 68;
66 -> 69;
66 -> 72;
66 -> 75;
66 -> 87;
66 -> 109;
65 [shape=box, label="FuncDecl name='is_prime'\ntype: bool\nsymbolTable: \n  n : int"];
65 -> 66;
113 [shape=box, label="VarDecl name='i'\ntype: int"];
114 [shape=box, label="VarDecl name='g'\ntype: int"];
116 [shape=box, label="Location name='i'\ntype: int"];
117 [shape=box, label="Literal value=1\ntype: int"];
115 [shape=box, label="Assignment"];
115 -> 116;
115 -> 117;
119 [shape=box, label="Location name='g'\ntype: int"];
120 [shape=box, label="Literal value=1\ntype: int"];
118 [shape=box, label="Assignment"];
118 -> 119;
118 -> 120;
124 [shape=box, label="Location name='i'\ntype: int"];
125 [shape=box, label="Location name='a'\ntype: int"];
123 [shape=box, label="BinaryOp op='<='\ntype: bool"];
123 -> 124;
123 -> 125;
127 [shape=box, label="Location name='i'\ntype: int"];
128 [shape=box, label="Location name='b'\ntype: int"];
126 [shape=box, label="BinaryOp op='<='\ntype: bool"];
126 -> 127;
126 -> 128;
122 [shape=box, label="BinaryOp op='&&'\ntype: bool"];
122 -> 123;
122 -> 126;
134 [shape=box, label="Location name='a'\ntype: int"];
135 [shape=box, label="Location name='i'\ntype: int"];
133 [shape=box, label="BinaryOp op='%'\ntype: int"];
133 -> 134;
133 -> 135;
136 [shape=box, label="Literal value=0\ntype: int"];
132 [shape=box, label="BinaryOp op='=='\ntype: bool"];
132 -> 133;
132 -> 136;
139 [shape=box, label="Location name='b'\ntype: int"];
140 [shape=box, label="Location name='i'\ntype: int"];
138 [shape=box, label="BinaryOp op='%'\ntype: int"];
138 -> 139;
138 -> 140;
141 [shape=box, label="Literal value=0\ntype: int"];
137 [shape=box, label="BinaryOp op='=='\ntype: bool"];
137 -> 138;
137 -> 141;
131 [shape=box, label="BinaryOp op='&&'\ntype: bool"];
131 -> 132;
131 -> 137;
144 [shape=box, label="Location name='g'\ntype: int"];
145 [shape=box, label="Location name='i'\ntype: int"];
143 [shape=box, label="Assignment"];
143 -> 144;
143 -> 145;
142 [shape=box, label="Block\nsymbolTable: (empty)"];
142 -> 143;
130 [shape=box, label="Conditional\ntype: bool"];
130 -> 131;
130 -> 142;
147 [shape=box, label="Location name='i'\ntype: int"];
149 [shape=box, label="Location name='i'\ntype: int"];
150 [shape=box, label="Literal value=1\ntype: int"];
148 [shape=box, label="BinaryOp op='+'\ntype: int"];
148 -> 149;
148 -> 150;
146 [shape=box, label="Assignment"];
146 -> 147;
146 -> 148;
129 [shape=box, label="Block\nsymbolTable: (empty)"];
129 -> 130;
129 -> 146;
121 [shape=box, label="WhileLoop\ntype: bool"];
121 -> 122;
121 -> 129;
152 [shape=box, label="Location name='g'\ntype: int"];
151 [shape=box, label="Return\ntype: int"];
151 -> 152;
112 [shape=box, label="Block\nsymbolTable: \n  i : int\n  g : int"];
112 -> 113;
112 -> 114;
112 -> 115;
112 -> 118;
112 -> 121;
112 -> 151;
111 [shape=box, label="FuncDecl name='gcd'\ntype: int\nsymbolTable: \n  a : int\n  b : int"];
111 -> 112;
155 [shape=box, label="VarDecl name='i'\ntype: int"];
156 [shape=box, label="VarDecl name='sum'\ntype: int"];
158 [shape=box, label="Location name='i'\ntype: int"];
159 [shape=box, label="Literal value=0\ntype: int"];
157 [shape=box, label="Assignment"];
157 -> 158;
157 -> 159;
161 [shape=box, label="Location name='sum'\ntype: int"];
162 [shape=box, label="Literal value=0\ntype: int"];
160 [shape=box, label="Assignment"];
160 -> 161;
160 -> 162;
165 [shape=box, label="Location name='i'\ntype: int"];
166 [shape=box, label="Location name='len'\ntype: int"];
164 [shape=box, label="BinaryOp op='<'\ntype: bool"];
164 -> 165;
164 -> 166;
169 [shape=box, label="Location name='sum'\ntype: int"];
171 [shape=box, label="Location name='sum'\ntype: int"];
173 [shape=box, label="Location name='i'\ntype: int"];
172 [shape=box, label="Location name='nums'\ntype: int"];
172 -> 173;
170 [shape=box, label="BinaryOp op='+'\ntype: int"];
170 -> 171;
170 -> 172;
168 [shape=box, label="Assignment"];
168 -> 169;
168 -> 170;
175 [shape=box, label="Location name='i'\ntype: int"];
177 [shape=box, label="Location name='i'\ntype: int"];
178 [shape=box, label="Literal value=1\ntype: int"];
176 [shape=box, label="BinaryOp op='+'\ntype: int"];
176 -> 177;
176 -> 178;
174 [shape=box, label="Assignment"];
174 -> 175;
174 -> 176;
167 [shape=box, label="Block\nsymbolTable: (empty)"];
167 -> 168;
167 -> 174;
163 [shape=box, label="WhileLoop\ntype: bool"];
163 -> 164;
163 -> 167;
180 [shape=box, label="Location name='sum'\ntype: int"];
179 [shape=box, label="Return\ntype: int"];
179 -> 180;
154 [shape=box, label="Block\nsymbolTable: \n  i : int\n  sum : int"];
154 -> 155;
154 -> 156;
154 -> 157;
154 -> 160;
154 -> 163;
154 -> 179;
153 [shape=box, label="FuncDecl name='sum_nums'\ntype: int\nsymbolTable: \n  len : int"];
153 -> 154;
183 [shape=box, label="VarDecl name='i'\ntype: int"];
184 [shape=box, label="VarDecl name='j'\ntype: int"];
185 [shape=box, label="VarDecl name='curr'\ntype: int"];
187 [shape=box, label="Location name='i'\ntype: int"];
188 [shape=box, label="Literal value=1\ntype: int"];
186 [shape=box, label="Assignment"];
186 -> 187;
186 -> 188;
191 [shape=box, label="Location name='i'\ntype: int"];
192 [shape=box, label="Location name='len'\ntype: int"];
190 [shape=box, label="BinaryOp op='<'\ntype: bool"];
190 -> 191;
190 -> 192;
195 [shape=box, label="Location name='curr'\ntype: int"];
197 [shape=box, label="Location name='i'\ntype: int"];
196 [shape=box, label="Location name='nums'\ntype: int"];
196 -> 197;
194 [shape=box, label="Assignment"];
194 -> 195;
194 -> 196;
199 [shape=box, label="Location name='j'\ntype: int"];
201 [shape=box, label="Location name='i'\ntype: int"];
202 [shape=box, label="Literal value=1\ntype: int"];
200 [shape=box, label="BinaryOp op='-'\ntype: int"];
200 -> 201;
200 -> 202;
198 [shape=box, label="Assignment"];
198 -> 199;
198 -> 200;
206 [shape=box, label="Location name='j'\ntype: int"];
207 [shape=box, label="Literal value=0\ntype: int"];
205 [shape=box, label="BinaryOp op='>='\ntype: bool"];
205 -> 206;
205 -> 207;
210 [shape=box, label="Location name='j'\ntype: int"];
209 [shape=box, label="Location name='nums'\ntype: int"];
209 -> 210;
211 [shape=box, label="Location name='curr'\ntype: int"];
208 [shape=box, label="BinaryOp op='>'\ntype: bool"];
208 -> 209;
208 -> 211;
204 [shape=box, label="BinaryOp op='&&'\ntype: bool"];
204 -> 205;
204 -> 208;
216 [shape=box, label="Location name='j'\ntype: int"];
217 [shape=box, label="Literal value=1\ntype: int"];
215 [shape=box, label="BinaryOp op='+'\ntype: int"];
215 -> 216;
215 -> 217;
214 [shape=box, label="Location name='nums'\ntype: int"];
214 -> 215;
219 [shape=box, label="Location name='j'\ntype: int"];
218 [shape=box, label="Location name='nums'\ntype: int"];
218 -> 219;
213 [shape=box, label="Assignment"];
213 -> 214;
213 -> 218;
221 [shape=box, label="Location name='j'\ntype: int"];
223 [shape=box, label="Location name='j'\ntype: int"];
224 [shape=box, label="Literal value=1\ntype: int"];
222 [shape=box, label="BinaryOp op='-'\ntype: int"];
222 -> 223;
222 -> 224;
220 [shape=box, label="Assignment"];
220 -> 221;
220 -> 222;
212 [shape=box, label="Block\nsymbolTable: (empty)"];
212 -> 213;
212 -> 220;
203 [shape=box, label="WhileLoop\ntype: bool"];
203 -> 204;
203 -> 212;
228 [shape=box, label="Location name='j'\ntype: int"];
229 [shape=box, label="Literal value=1\ntype: int"];
227 [shape=box, label="BinaryOp op='+'\ntype: int"];
227 -> 228;
227 -> 229;
226 [shape=box, label="Location name='nums'\ntype: int"];
226 -> 227;
230 [shape=box, label="Location name='curr'\ntype: int"];
225 [shape=box, label="Assignment"];
225 -> 226;
225 -> 230;
232 [shape=box, label="Location name='i'\ntype: int"];
234 [shape=box, label="Location name='i'\ntype: int"];
235 [shape=box, label="Literal value=1\ntype: int"];
233 [shape=box, label="BinaryOp op='+'\ntype: int"];
233 -> 234;
233 -> 235;
231 [shape=box, label="Assignment"];
231 -> 232;
231 -> 233;
193 [shape=box, label="Block\nsymbolTable: (empty)"];
193 -> 194;
193 -> 198;
193 -> 203;
193 -> 225;
193 -> 231;
189 [shape=box, label="WhileLoop\ntype: bool"];
189 -> 190;
189 -> 193;
236 [shape=box, label="Return\ntype: int"];
182 [shape=box, label="Block\nsymbolTable: \n  i : int\n  j : int\n  curr : int"];
182 -> 183;
182 -> 184;
182 -> 185;
182 -> 186;
182 -> 189;
182 -> 236;
181 [shape=box, label="FuncDecl name='sort_nums'\ntype: int\nsymbolTable: \n  len : int"];
181 -> 182;
239 [shape=box, label="VarDecl name='level'\ntype: int"];
240 [shape=box, label="VarDecl name='elements'\ntype: int"];
241 [shape=box, label="VarDecl name='spaces'\ntype: int"];
242 [shape=box, label="VarDecl name='temp'\ntype: int"];
246 [shape=box, label="Location name='base'\ntype: int"];
247 [shape=box, label="Literal value=2\ntype: int"];
245 [shape=box, label="BinaryOp op='%'\ntype: int"];
245 -> 246;
245 -> 247;
248 [shape=box, label="Literal value=0\ntype: int"];
244 [shape=box, label="BinaryOp op='=='\ntype: bool"];
244 -> 245;
244 -> 248;
251 [shape=box, label="Location name='elements'\ntype: int"];
252 [shape=box, label="Literal value=2\ntype: int"];
250 [shape=box, label="Assignment"];
250 -> 251;
250 -> 252;
249 [shape=box, label="Block\nsymbolTable: (empty)"];
249 -> 250;
255 [shape=box, label="Location name='elements'\ntype: int"];
256 [shape=box, label="Literal value=1\ntype: int"];
254 [shape=box, label="Assignment"];
254 -> 255;
254 -> 256;
253 [shape=box, label="Block\nsymbolTable: (empty)"];
253 -> 254;
243 [shape=box, label="Conditional\ntype: bool"];
243 -> 244;
243 -> 249;
243 -> 253;
258 [shape=box, label="Location name='level'\ntype: int"];
261 [shape=box, label="Location name='base'\ntype: int"];
262 [shape=box, label="Literal value=1\ntype: int"];
260 [shape=box, label="BinaryOp op='+'\ntype: int"];
260 -> 261;
260 -> 262;
263 [shape=box, label="Literal value=2\ntype: int"];
259 [shape=box, label="BinaryOp op='/'\ntype: int"];
259 -> 260;
259 -> 263;
257 [shape=box, label="Assignment"];
257 -> 258;
257 -> 259;
265 [shape=box, label="Location name='spaces'\ntype: int"];
268 [shape=box, label="Location name='base'\ntype: int"];
269 [shape=box, label="Literal value=1\ntype: int"];
267 [shape=box, label="BinaryOp op='-'\ntype: int"];
267 -> 268;
267 -> 269;
270 [shape=box, label="Literal value=2\ntype: int"];
266 [shape=box, label="BinaryOp op='/'\ntype: int"];
266 -> 267;
266 -> 270;
264 [shape=box, label="Assignment"];
264 -> 265;
264 -> 266;
273 [shape=box, label="Location name='level'\ntype: int"];
274 [shape=box, label="Literal value=0\ntype: int"];
272 [shape=box, label="BinaryOp op='>'\ntype: bool"];
272 -> 273;
272 -> 274;
277 [shape=box, label="Location name='temp'\ntype: int"];
278 [shape=box, label="Literal value=0\ntype: int"];
276 [shape=box, label="Assignment"];
276 -> 277;
276 -> 278;
281 [shape=box, label="Location name='temp'\ntype: int"];
282 [shape=box, label="Location name='spaces'\ntype: int"];
280 [shape=box, label="BinaryOp op='<'\ntype: bool"];
280 -> 281;
280 -> 282;
285 [shape=box, label="Literal value=' '\ntype: str"];
284 [shape=box, label="FuncCall name='print_str'\ntype: void"];
284 -> 285;
287 [shape=box, label="Location name='temp'\ntype: int"];
289 [shape=box, label="Location name='temp'\ntype: int"];
290 [shape=box, label="Literal value=1\ntype: int"];
288 [shape=box, label="BinaryOp op='+'\ntype: int"];
288 -> 289;
288 -> 290;
286 [shape=box, label="Assignment"];
286 -> 287;
286 -> 288;
283 [shape=box, label="Block\nsymbolTable: (empty)"];
283 -> 284;
283 -> 286;
279 [shape=box, label="WhileLoop\ntype: bool"];
279 -> 280;
279 -> 283;
292 [shape=box, label="Location name='temp'\ntype: int"];
293 [shape=box, label="Literal value=0\ntype: int"];
291 [shape=box, label="Assignment"];
291 -> 292;
291 -> 293;
296 [shape=box, label="Location name='temp'\ntype: int"];
297 [shape=box, label="Location name='elements'\ntype: int"];
295 [shape=box, label="BinaryOp op='<'\ntype: bool"];
295 -> 296;
295 -> 297;
300 [shape=box, label="Literal value='#'\ntype: str"];
299 [shape=box, label="FuncCall name='print_str'\ntype: void"];
299 -> 300;
302 [shape=box, label="Location name='temp'\ntype: int"];
304 [shape=box, label="Location name='temp'\ntype: int"];
305 [shape=box, label="Literal value=1\ntype: int"];
303 [shape=box, label="BinaryOp op='+'\ntype: int"];
303 -> 304;
303 -> 305;
301 [shape=box, label="Assignment"];
301 -> 302;
301 -> 303;
298 [shape=box, label="Block\nsymbolTable: (empty)"];
298 -> 299;
298 -> 301;
294 [shape=box, label="WhileLoop\ntype: bool"];
294 -> 295;
294 -> 298;
307 [shape=box, label="Literal value='\n'\ntype: str"];
306 [shape=box, label="FuncCall name='print_str'\ntype: void"];
306 -> 307;
309 [shape=box, label="Location name='elements'\ntype: int"];
311 [shape=box, label="Location name='elements'\ntype: int"];
312 [shape=box, label="Literal value=2\ntype: int"];
310 [shape=box, label="BinaryOp op='+'\ntype: int"];
310 -> 311;
310 -> 312;
308 [shape=box, label="Assignment"];
308 -> 309;
308 -> 310;
314 [shape=box, label="Location name='spaces'\ntype: int"];
316 [shape=box, label="Location name='spaces'\ntype: int"];
317 [shape=box, label="Literal value=1\ntype: int"];
315 [shape=box, label="BinaryOp op='-'\ntype: int"];
315 -> 316;
315 -> 317;
313 [shape=box, label="Assignment"];
313 -> 314;
313 -> 315;
319 [shape=box, label="Location name='level'\ntype: int"];
321 [shape=box, label="Location name='level'\ntype: int"];
322 [shape=box, label="Literal value=1\ntype: int"];
320 [shape=box, label="BinaryOp op='-'\ntype: int"];
320 -> 321;
320 -> 322;
318 [shape=box, label="Assignment"];
318 -> 319;
318 -> 320;
275 [shape=box, label="Block\nsymbolTable: (empty)"];
275 -> 276;
275 -> 279;
275 -> 291;
275 -> 294;
275 -> 306;
275 -> 308;
275 -> 313;
275 -> 318;
271 [shape=box, label="WhileLoop\ntype: bool"];
271 -> 272;
271 -> 275;
323 [shape=box, label="Return\ntype: void"];
238 [shape=box, label="Block\nsymbolTable: \n  level : int\n  elements : int\n  spaces : int\n  temp : int"];
238 -> 239;
238 -> 240;
238 -> 241;
238 -> 242;
238 -> 243;
238 -> 257;
238 -> 264;
238 -> 271;
238 -> 323;
237 [shape=box, label="FuncDecl name='draw_triangle'\ntype: void\nsymbolTable: \n  base : int"];
237 -> 238;
326 [shape=box, label="VarDecl name='i'\ntype: int"];
327 [shape=box, label="VarDecl name='len'\ntype: int"];
329 [shape=box, label="Literal value='Factorial of 2: '\ntype: str"];
328 [shape=box, label="FuncCall name='print_str'\ntype: void"];
328 -> 329;
332 [shape=box, label="Literal value=2\ntype: int"];
331 [shape=box, label="FuncCall name='fact'\ntype: int"];
331 -> 332;
330 [shape=box, label="FuncCall name='print_int'\ntype: void"];
330 -> 331;
334 [shape=box, label="Literal value='\nFactorial of 3: '\ntype: str"];
333 [shape=box, label="FuncCall name='print_str'\ntype: void"];
333 -> 334;
337 [shape=box, label="Literal value=3\ntype: int"];
336 [shape=box, label="FuncCall name='fact'\ntype: int"];
336 -> 337;
335 [shape=box, label="FuncCall name='print_int'\ntype: void"];
335 -> 336;
339 [shape=box, label="Literal value='\nFactorial of 8: '\ntype: str"];
338 [shape=box, label="FuncCall name='print_str'\ntype: void"];
338 -> 339;
342 [shape=box, label="Literal value=8\ntype: int"];
341 [shape=box, label="FuncCall name='fact'\ntype: int"];
341 -> 342;
340 [shape=box, label="FuncCall name='print_int'\ntype: void"];
340 -> 341;
344 [shape=box, label="Literal value='\n1st Fibonacci Number: '\ntype: str"];
343 [shape=box, label="FuncCall name='print_str'\ntype: void"];
343 -> 344;
347 [shape=box, label="Literal value=1\ntype: int"];
346 [shape=box, label="FuncCall name='fib'\ntype: int"];
346 -> 347;
345 [shape=box, label="FuncCall name='print_int'\ntype: void"];
345 -> 346;
349 [shape=box, label="Literal value='\n3rd Fibonacci Number: '\ntype: str"];
348 [shape=box, label="FuncCall name='print_str'\ntype: void"];
348 -> 349;
352 [shape=box, label="Literal value=3\ntype: int"];
351 [shape=box, label="FuncCall name='fib'\ntype: int"];
351 -> 352;
350 [shape=box, label="FuncCall name='print_int'\ntype: void"];
350 -> 351;
354 [shape=box, label="Literal value='\n4th Fibonacci Number: '\ntype: str"];
353 [shape=box, label="FuncCall name='print_str'\ntype: void"];
353 -> 354;
357 [shape=box, label="Literal value=4\ntype: int"];
356 [shape=box, label="FuncCall name='fib'\ntype: int"];
356 -> 357;
355 [shape=box, label="FuncCall name='print_int'\ntype: void"];
355 -> 356;
359 [shape=box, label="Literal value='\n8th Fibonacci Number: '\ntype: str"];
358 [shape=box, label="FuncCall name='print_str'\ntype: void"];
358 -> 359;
362 [shape=box, label="Literal value=8\ntype: int"];
361 [shape=box, label="FuncCall name='fib'\ntype: int"];
361 -> 362;
360 [shape=box, label="FuncCall name='print_int'\ntype: void"];
360 -> 361;
364 [shape=box, label="Literal value='\n3 is prime: '\ntype: str"];
363 [shape=box, label="FuncCall name='print_str'\ntype: void"];
363 -> 364;
367 [shape=box, label="Literal value=2\ntype: int"];
366 [shape=box, label="FuncCall name='is_prime'\ntype: bool"];
366 -> 367;
365 [shape=box, label="FuncCall name='print_bool'\ntype: void"];
365 -> 366;
369 [shape=box, label="Literal value='\n12 is prime: '\ntype: str"];
368 [shape=box, label="FuncCall name='print_str'\ntype: void"];
368 -> 369;
372 [shape=box, label="Literal value=12\ntype: int"];
371 [shape=box, label="FuncCall name='is_prime'\ntype: bool"];
371 -> 372;
370 [shape=box, label="FuncCall name='print_bool'\ntype: void"];
370 -> 371;
374 [shape=box, label="Literal value='\n31 is prime: '\ntype: str"];
373 [shape=box, label="FuncCall name='print_str'\ntype: void"];
373 -> 374;
377 [shape=box, label="Literal value=31\ntype: int"];
376 [shape=box, label="FuncCall name='is_prime'\ntype: bool"];
376 -> 377;
375 [shape=box, label="FuncCall name='print_bool'\ntype: void"];
375 -> 376;
379 [shape=box, label="Literal value='\n443 is prime: '\ntype: str"];
378 [shape=box, label="FuncCall name='print_str'\ntype: void"];
378 -> 379;
382 [shape=box, label="Literal value=443\ntype: int"];
381 [shape=box, label="FuncCall name='is_prime'\ntype: bool"];
381 -> 382;
380 [shape=box, label="FuncCall name='print_bool'\ntype: void"];
380 -> 381;
384 [shape=box, label="Literal value='\n445 is prime: '\ntype: str"];
383 [shape=box, label="FuncCall name='print_str'\ntype: void"];
383 -> 384;
387 [shape=box, label="Literal value=445\ntype: int"];
386 [shape=box, label="FuncCall name='is_prime'\ntype: bool"];
386 -> 387;
385 [shape=box, label="FuncCall name='print_bool'\ntype: void"];
385 -> 386;
389 [shape=box, label="Location name='i'\ntype: int"];
390 [shape=box, label="Literal value=0\ntype: int"];
388 [shape=box, label="Assignment"];
388 -> 389;
388 -> 390;
392 [shape=box, label="Location name='len'\ntype: int"];
393 [shape=box, label="Literal value=10\ntype: int"];
391 [shape=box, label="Assignment"];
391 -> 392;
391 -> 393;
396 [shape=box, label="Location name='i'\ntype: int"];
397 [shape=box, label="Location name='len'\ntype: int"];
395 [shape=box, label="BinaryOp op='<'\ntype: bool"];
395 -> 396;
395 -> 397;
401 [shape=box, label="Location name='i'\ntype: int"];
400 [shape=box, label="Location name='nums'\ntype: int"];
400 -> 401;
403 [shape=box, label="Literal value=1\ntype: int"];
404 [shape=box, label="Location name='i'\ntype: int"];
402 [shape=box, label="BinaryOp op='+'\ntype: int"];
402 -> 403;
402 -> 404;
399 [shape=box, label="Assignment"];
399 -> 400;
399 -> 402;
406 [shape=box, label="Location name='i'\ntype: int"];
408 [shape=box, label="Location name='i'\ntype: int"];
409 [shape=box, label="Literal value=1\ntype: int"];
407 [shape=box, label="BinaryOp op='+'\ntype: int"];
407 -> 408;
407 -> 409;
405 [shape=box, label="Assignment"];
405 -> 406;
405 -> 407;
398 [shape=box, label="Block\nsymbolTable: (empty)"];
398 -> 399;
398 -> 405;
394 [shape=box, label="WhileLoop\ntype: bool"];
394 -> 395;
394 -> 398;
411 [shape=box, label="Literal value='\nSum of first 0 elements: '\ntype: str"];
410 [shape=box, label="FuncCall name='print_str'\ntype: void"];
410 -> 411;
414 [shape=box, label="Literal value=0\ntype: int"];
413 [shape=box, label="FuncCall name='sum_nums'\ntype: int"];
413 -> 414;
412 [shape=box, label="FuncCall name='print_int'\ntype: void"];
412 -> 413;
416 [shape=box, label="Literal value='\nSum of first 1 elements: '\ntype: str"];
415 [shape=box, label="FuncCall name='print_str'\ntype: void"];
415 -> 416;
419 [shape=box, label="Literal value=1\ntype: int"];
418 [shape=box, label="FuncCall name='sum_nums'\ntype: int"];
418 -> 419;
417 [shape=box, label="FuncCall name='print_int'\ntype: void"];
417 -> 418;
421 [shape=box, label="Literal value='\nSum of first 2 elements: '\ntype: str"];
420 [shape=box, label="FuncCall name='print_str'\ntype: void"];
420 -> 421;
424 [shape=box, label="Literal value=2\ntype: int"];
423 [shape=box, label="FuncCall name='sum_nums'\ntype: int"];
423 -> 424;
422 [shape=box, label="FuncCall name='print_int'\ntype: void"];
422 -> 423;
426 [shape=box, label="Location name='i'\ntype: int"];
427 [shape=box, label="Literal value=0\ntype: int"];
425 [shape=box, label="Assignment"];
425 -> 426;
425 -> 427;
430 [shape=box, label="Location name='i'\ntype: int"];
431 [shape=box, label="Location name='len'\ntype: int"];
429 [shape=box, label="BinaryOp op='<'\ntype: bool"];
429 -> 430;
429 -> 431;
436 [shape=box, label="Location name='i'\ntype: int"];
437 [shape=box, label="Literal value=2\ntype: int"];
435 [shape=box, label="BinaryOp op='%'\ntype: int"];
435 -> 436;
435 -> 437;
438 [shape=box, label="Literal value=0\ntype: int"];
434 [shape=box, label="BinaryOp op='=='\ntype: bool"];
434 -> 435;
434 -> 438;
442 [shape=box, label="Location name='i'\ntype: int"];
441 [shape=box, label="Location name='nums'\ntype: int"];
441 -> 442;
444 [shape=box, label="Location name='i'\ntype: int"];
445 [shape=box, label="Literal value=3\ntype: int"];
443 [shape=box, label="BinaryOp op='*'\ntype: int"];
443 -> 444;
443 -> 445;
440 [shape=box, label="Assignment"];
440 -> 441;
440 -> 443;
439 [shape=box, label="Block\nsymbolTable: (empty)"];
439 -> 440;
433 [shape=box, label="Conditional\ntype: bool"];
433 -> 434;
433 -> 439;
447 [shape=box, label="Location name='i'\ntype: int"];
449 [shape=box, label="Location name='i'\ntype: int"];
450 [shape=box, label="Literal value=1\ntype: int"];
448 [shape=box, label="BinaryOp op='+'\ntype: int"];
448 -> 449;
448 -> 450;
446 [shape=box, label="Assignment"];
446 -> 447;
446 -> 448;
432 [shape=box, label="Block\nsymbolTable: (empty)"];
432 -> 433;
432 -> 446;
428 [shape=box, label="WhileLoop\ntype: bool"];
428 -> 429;
428 -> 432;
452 [shape=box, label="Literal value='\nSort the first element: '\ntype: str"];
451 [shape=box, label="FuncCall name='print_str'\ntype: void"];
451 -> 452;
454 [shape=box, label="Literal value=1\ntype: int"];
453 [shape=box, label="FuncCall name='sort_nums'\ntype: int"];
453 -> 454;
457 [shape=box, label="Literal value=0\ntype: int"];
456 [shape=box, label="Location name='nums'\ntype: int"];
456 -> 457;
455 [shape=box, label="FuncCall name='print_int'\ntype: void"];
455 -> 456;
459 [shape=box, label="Literal value='\nSort the first 4 elements: '\ntype: str"];
458 [shape=box, label="FuncCall name='print_str'\ntype: void"];
458 -> 459;
461 [shape=box, label="Literal value=4\ntype: int"];
460 [shape=box, label="FuncCall name='sort_nums'\ntype: int"];
460 -> 461;
464 [shape=box, label="Literal value=0\ntype: int"];
463 [shape=box, label="Location name='nums'\ntype: int"];
463 -> 464;
462 [shape=box, label="FuncCall name='print_int'\ntype: void"];
462 -> 463;
467 [shape=box, label="Literal value=1\ntype: int"];
466 [shape=box, label="Location name='nums'\ntype: int"];
466 -> 467;
465 [shape=box, label="FuncCall name='print_int'\ntype: void"];
465 -> 466;
470 [shape=box, label="Literal value=2\ntype: int"];
469 [shape=box, label="Location name='nums'\ntype: int"];
469 -> 470;
468 [shape=box, label="FuncCall name='print_int'\ntype: void"];
468 -> 469;
473 [shape=box, label="Literal value=3\ntype: int"];
472 [shape=box, label="Location name='nums'\ntype: int"];
472 -> 473;
471 [shape=box, label="FuncCall name='print_int'\ntype: void"];
471 -> 472;
475 [shape=box, label="Literal value='\nSort the first 10 elements: '\ntype: str"];
474 [shape=box, label="FuncCall name='print_str'\ntype: void"];
474 -> 475;
477 [shape=box, label="Literal value=10\ntype: int"];
476 [shape=box, label="FuncCall name='sort_nums'\ntype: int"];
476 -> 477;
480 [shape=box, label="Literal value=0\ntype: int"];
479 [shape=box, label="Location name='nums'\ntype: int"];
479 -> 480;
478 [shape=box, label="FuncCall name='print_int'\ntype: void"];
478 -> 479;
483 [shape=box, label="Literal value=1\ntype: int"];
482 [shape=box, label="Location name='nums'\ntype: int"];
482 -> 483;
481 [shape=box, label="FuncCall name='print_int'\ntype: void"];
481 -> 482;
486 [shape=box, label="Literal value=2\ntype: int"];
485 [shape=box, label="Location name='nums'\ntype: int"];
485 -> 486;
484 [shape=box, label="FuncCall name='print_int'\ntype: void"];
484 -> 485;
489 [shape=box, label="Literal value=3\ntype: int"];
488 [shape=box, label="Location name='nums'\ntype: int"];
488 -> 489;
487 [shape=box, label="FuncCall name='print_int'\ntype: void"];
487 -> 488;
492 [shape=box, label="Literal value=4\ntype: int"];
491 [shape=box, label="Location name='nums'\ntype: int"];
491 -> 492;
490 [shape=box, label="FuncCall name='print_int'\ntype: void"];
490 -> 491;
495 [shape=box, label="Literal value=5\ntype: int"];
494 [shape=box, label="Location name='nums'\ntype: int"];
494 -> 495;
493 [shape=box, label="FuncCall name='print_int'\ntype: void"];
493 -> 494;
498 [shape=box, label="Literal value=6\ntype: int"];
497 [shape=box, label="Location name='nums'\ntype: int"];
497 -> 498;
496 [shape=box, label="FuncCall name='print_int'\ntype: void"];
496 -> 497;
501 [shape=box, label="Literal value=7\ntype: int"];
500 [shape=box, label="Location name='nums'\ntype: int"];
500 -> 501;
499 [shape=box, label="FuncCall name='print_int'\ntype: void"];
499 -> 500;
504 [shape=box, label="Literal value=8\ntype: int"];
503 [shape=box, label="Location name='nums'\ntype: int"];
503 -> 504;
502 [shape=box, label="FuncCall name='print_int'\ntype: void"];
502 -> 503;
507 [shape=box, label="Literal value=9\ntype: int"];
506 [shape=box, label="Location name='nums'\ntype: int"];
506 -> 507;
505 [shape=box, label="FuncCall name='print_int'\ntype: void"];
505 -> 506;
509 [shape=box, label="Literal value='\nGCD of 8 and 12: '\ntype: str"];
508 [shape=box, label="FuncCall name='print_str'\ntype: void"];
508 -> 509;
512 [shape=box, label="Literal value=8\ntype: int"];
513 [shape=box, label="Literal value=12\ntype: int"];
511 [shape=box, label="FuncCall name='gcd'\ntype: int"];
511 -> 512;
511 -> 513;
510 [shape=box, label="FuncCall name='print_int'\ntype: void"];
510 -> 511;
515 [shape=box, label="Literal value='\nGCD of 7 and 12: '\ntype: str"];
514 [shape=box, label="FuncCall name='print_str'\ntype: void"];
514 -> 515;
518 [shape=box, label="Literal value=7\ntype: int"];
519 [shape=box, label="Literal value=12\ntype: int"];
517 [shape=box, label="FuncCall name='gcd'\ntype: int"];
517 -> 518;
517 -> 519;
516 [shape=box, label="FuncCall name='print_int'\ntype: void"];
516 -> 517;
521 [shape=box, label="Literal value='\nGCD of 36 and 6: '\ntype: str"];
520 [shape=box, label="FuncCall name='print_str'\ntype: void"];
520 -> 521;
524 [shape=box, label="Literal value=36\ntype: int"];
525 [shape=box, label="Literal value=6\ntype: int"];
523 [shape=box, label="FuncCall name='gcd'\ntype: int"];
523 -> 524;
523 -> 525;
522 [shape=box, label="FuncCall name='print_int'\ntype: void"];
522 -> 523;
527 [shape=box, label="Literal value='\nBase = 3 \n'\ntype: str"];
526 [shape=box, label="FuncCall name='print_str'\ntype: void"];
526 -> 527;
529 [shape=box, label="Literal value=3\ntype: int"];
528 [shape=box, label="FuncCall name='draw_triangle'\ntype: void"];
528 -> 529;
531 [shape=box, label="Literal value='\nBase = 4 \n'\ntype: str"];
530 [shape=box, label="FuncCall name='print_str'\ntype: void"];
530 -> 531;
533 [shape=box, label="Literal value=4\ntype: int"];
532 [shape=box, label="FuncCall name='draw_triangle'\ntype: void"];
532 -> 533;
535 [shape=box, label="Literal value='\nBase = 9 \n'\ntype: str"];
534 [shape=box, label="FuncCall name='print_str'\ntype: void"];
534 -> 535;
537 [shape=box, label="Literal value=9\ntype: int"];
536 [shape=box, label="FuncCall name='draw_triangle'\ntype: void"];
536 -> 537;
539 [shape=box, label="Literal value='\nBase = 12 \n'\ntype: str"];
538 [shape=box, label="FuncCall name='print_str'\ntype: void"];
538 -> 539;
541 [shape=box, label="Literal value=12\ntype: int"];
540 [shape=box, label="FuncCall name='draw_triangle'\ntype: void"];
540 -> 541;
543 [shape=box, label="Literal value='\n'\ntype: str"];
542 [shape=box, label="FuncCall name='print_str'\ntype: void"];
542 -> 543;
545 [shape=box, label="Literal value=2\ntype: int"];
544 [shape=box, label="Return\ntype: int"];
544 -> 545;
325 [shape=box, label="Block\nsymbolTable: \n  i : int\n  len : int"];
325 -> 326;
325 -> 327;
325 -> 328;
325 -> 330;
325 -> 333;
325 -> 335;
325 -> 338;
325 -> 340;
325 -> 343;
325 -> 345;
325 -> 348;
325 -> 350;
325 -> 353;
325 -> 355;
325 -> 358;
325 -> 360;
325 -> 363;
325 -> 365;
325 -> 368;
325 -> 370;
325 -> 373;
325 -> 375;
325 -> 378;
325 -> 380;
325 -> 383;
325 -> 385;
325 -> 388;
325 -> 391;
325 -> 394;
325 -> 410;
325 -> 412;
325 -> 415;
325 -> 417;
325 -> 420;
325 -> 422;
325 -> 425;
325 -> 428;
325 -> 451;
325 -> 453;
325 -> 455;
325 -> 458;
325 -> 460;
325 -> 462;
325 -> 465;
325 -> 468;
325 -> 471;
325 -> 474;
325 -> 476;
325 -> 478;
325 -> 481;
325 -> 484;
325 -> 487;
325 -> 490;
325 -> 493;
325 -> 496;
325 -> 499;
325 -> 502;
325 -> 505;
325 -> 508;
325 -> 510;
325 -> 514;
325 -> 516;
325 -> 520;
325 -> 522;
325 -> 526;
325 -> 528;
325 -> 530;
325 -> 532;
325 -> 534;
325 -> 536;
325 -> 538;
325 -> 540;
325 -> 542;
325 -> 544;
324 [shape=box, label="FuncDecl name='main'\ntype: int\nsymbolTable: (empty)"];
324 -> 325;
0 [shape=box, label="Program\nsymbolTable: \n  print_int : (int) -> void\n  print_bool : (bool) -> void\n  print_str : (str) -> void\n  fact : (int) -> int\n  fib : (int) -> int\n  is_prime : (int) -> bool\n  gcd : (int, int) -> int\n  sum_nums : (int) -> int\n  sort_nums : (int) -> int\n  draw_triangle : (int) -> void\n  main : () -> int\n  nums : int [100]"];
0 -> 1;
0 -> 2;
0 -> 27;
0 -> 65;
0 -> 111;
0 -> 153;
0 -> 181;
0 -> 237;
0 -> 324;
}
